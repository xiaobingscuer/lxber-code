#!/usr/bin/python
# coding=utf-8

"""
solid设计原则
"""

""" 
单一职责原则（Single Responsibility Principle）：

描述：一个实体只有一个职责；一个实体有且只有一个被修改的理由；

内涵解释：
    实体：模块、类、方法、功能函数代码块；
    职责：定义为变化；抽象功能是应用中的变化；

生活中的例子：
    叉子是叉子，勺子是勺子，而不是叉勺
    
违反原则的坏处：
    1. 因为不同的原因去修改它，这可能会导致不同功能之间相互影响。
    2. 单个类承担的职责越多，意味着这个类的复杂度也就越高，它的维护成本也同样会水涨船高。
    3. 违反“单一职责原则”的类同样也难以被复用
    
违反原则后的修复方法：
    1. 把大类（实体）拆分为小类（实体）
    2. 使用函数
    
代码举例：
    
"""